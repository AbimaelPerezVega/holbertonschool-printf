/**
 * convert_r - reverses a string and stores it
 *             to a buffer contained in a struct.
 * @args: va_list pointing to the string to be reversed.
 * @flags: Flag modifiers.
 * @w: width modifier.
 * @pre: precision modifier.
 * @len: length modifier.
 * @output: buffer_t struct containing a character array.
 *
 * Return: number of bytes stored to the buffer.
 */
unsigned int convert_r(va_list args, buffer_t *output,
                       unsigned char flags, int w, int pre, unsigned char len)
{
    char *str = va_arg(args, char *);
    char *null = "(null)";
    int size = 0, end, i;
    unsigned int ret = 0;

    (void)flags;
    (void)len;

    if (str == NULL)
        return (_memcpy(output, null, 6));

    while (*(str + size))
        size++;

    ret += print_string_width(output, flags, w, pre == -1 ? size : pre, size);

    end = size - 1;
    for (i = 0; end >= 0 && i < pre; i++, end--)
    {
        ret += _memcpy(output, (str + end), 1);
    }

    ret += print_neg_width(output, ret, flags, w);

    return ret;
}
